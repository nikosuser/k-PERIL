How to run k-PERIL (for WUINITY):

using k_PERIL_DLL;

namespace WUINITY
{
    internal class Program
    {
        static void Main(string[] args)
        {

            int cellsize = 30;                          //grid cell size (meters)
            int ASET = 120;                             //ASET (min)
            float windMag = 5;                          //wind magnitude (raw, as recorded in weather station)
            int[,] WUInodes = [20,20; 20,5; 5,5; 5,20]  //points should be in order, defining a polygon. Top left is (0,0). 
            int[,] ROS = [12,12,12,... ; 12,12,12,... ; ...];       //ROS, m/min
            int[,] Azimuth = [45,45,45,... ; 45,45,45,... ; ...];   //direction of maximum spread, degrees
            
            PERIL peril = new PERIL();

            int[,] singleBoundary = peril.calcSingularBoundary(float cellsize, int tBuffer, float windSpeed, int[,] WUIarea, float[,] ROS, float[,] azimuth);       //Returns Single Boundary (no need to use this anymore)
            
            int[,] probBoundary = peril.calcMultipleBoundaries(float[] cellsize, int[] tBuffer, float[] windSpeed, int[][,] WUIarea, float[][,] ROS, float[][,] azimuth)                            //Returns nothing, saves individual boundaries in a list in the object
            
            List<int[,]> allBoundaries = peril.getBoundaryList()      
        }

    }

}